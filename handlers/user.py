from aiogram import Router
import sqlite3
from datetime import datetime, timedelta
import os
import random
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters.command import Command, CommandObject
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config import bot


router = Router()
conn = sqlite3.connect('handlers/mephmetrbot.db')
cursor = conn.cursor()

@router.message(Command('profile'))
async def profile_command(message: Message):
    
    if message.reply_to_message:
        user_id = message.reply_to_message.from_user.id
    elif message.from_user:
        user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
            await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if user:
            drug_count = user[1]
            is_admin = user[3]
            clan_member = user[7]
            if clan_member:
                cursor.execute('SELECT clan_name FROM clans WHERE clan_id = ?', (clan_member,))
                clan = cursor.fetchone()
                clan_name = clan[0] if clan else 0
            if user_id == message.from_user.id:
                username = message.from_user.username if message.from_user.username else None
                full_name = message.from_user.full_name
            else:
                username = message.reply_to_message.from_user.username if message.reply_to_message.from_user.username else None
                full_name = message.reply_to_message.from_user.full_name

            if is_admin == 1:
                if clan_member:
                    await message.reply(f"üëë *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*\nüë§ *–ò–º—è:* _{full_name}_\nüë• *–ö–ª–∞–Ω:* *{clan_name}*\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
                else:
                    await message.reply(f"üëë *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*\nüë§ *–ò–º—è:* _{full_name}_\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
            else:
                if clan_member:
                    await message.reply(f"üë§ *–ò–º—è:* _{full_name}_\nüë• *–ö–ª–∞–Ω:* *{clan_name}*\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
                else:
                    await message.reply(f"üë§ *–ò–º—è:* _{full_name}_\nüë• *Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{username}\nüÜî *ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: * `{user_id}`\nüåø *–°–Ω—é—Ö–∞–Ω–æ* _{drug_count}_ –≥—Ä–∞–º–º.", parse_mode='markdown')
        else:
            await message.reply('‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')


@router.message(Command('give'))
async def give_command(message: Message, state: FSMContext, command: CommandObject):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
        return
    args = command.args.split(' ', maxsplit=1)
    try:
        value = int(args[0])
    except ValueError:
        await message.reply('‚ùå –í–≤–µ–¥–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
        return
    reply_msg = message.reply_to_message
    if reply_msg:
        recipient_id = reply_msg.from_user.id
        if recipient_id == 7266772626:
            await message.reply('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –±–æ—Ç—É')
            return
        cursor.execute('SELECT * FROM users WHERE id = ?', (recipient_id,))
        recipient = cursor.fetchone()
        cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
        sender = cursor.fetchone()
        if recipient and sender:
            sender_drug_count = sender[1]
            if value <= 0:
                await message.reply('‚ùå –ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏ –±–æ–ª—å—à–µ –Ω—É–ª—è')
            elif sender_drug_count >= value:
                commission = round(value * 0.10)
                net_value = value - commission
                cursor.execute('SELECT drug_count FROM users WHERE id = ?', (7266772626,))
                bot_balance_row = cursor.fetchone()
                bot_balance = bot_balance_row[0] if bot_balance_row else 0
                cursor.execute('UPDATE users SET drug_count = drug_count + ? WHERE id = ?', (net_value, recipient_id))
                cursor.execute('UPDATE users SET drug_count = drug_count - ? WHERE id = ?', (value, user_id))
                cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (bot_balance + commission, 7266772626))
                conn.commit()
                await bot.send_message(os.environ.get('LOGS_CHAT_ID'),f"<b>#GIVE</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{recipient_id}</code>\nvalue: <code>{net_value}</code>\nCommission: <code>{commission}</code>\n\n<a href='tg://user?id={recipient_id}'>mention</a>",parse_mode='HTML')
                recipient_username = reply_msg.from_user.username
                if recipient_username:
                    await message.reply(
                        f"‚úÖ [{message.from_user.first_name}](tg://user?id={message.from_user.id}) _–ø–æ–¥–∞—Ä–∏–ª(-–∞) {value} –≥—Ä. –º–µ—Ñ–∞_ [{reply_msg.from_user.first_name}](tg://user?id={recipient_id})!\n–ö–æ–º–∏—Å—Å–∏—è: `{commission}` –≥—Ä. –º–µ—Ñ–∞\n–ü–æ–ª—É—á–µ–Ω–æ `{net_value}` –≥—Ä. –º–µ—Ñ–∞.",
                        parse_mode='markdown'
                    )
                else:
                    await message.reply(
                        f"‚úÖ [{message.from_user.first_name}](tg://user?id={message.from_user.id}) _–ø–æ–¥–∞—Ä–∏–ª(-–∞) {value} –≥—Ä. –º–µ—Ñ–∞_ [{reply_msg.from_user.first_name}](tg://user?id={recipient_id})!\n–ö–æ–º–∏—Å—Å–∏—è: `{commission}` –≥—Ä. –º–µ—Ñ–∞\n–ü–æ–ª—É—á–µ–Ω–æ `{net_value}` –≥—Ä. –º–µ—Ñ–∞.",
                        parse_mode='markdown'
                    )
            else:
                await message.reply('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥—Ä–∞–º–º–æ–≤ –º–µ—Ñ–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏')
        else:
            await message.reply('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
    else:
        await message.reply('‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞')

@router.message(Command('find'))
async def drug_command(message: Message, state: FSMContext):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    drug_count = user[1] if user else 0
    last_used = user[6] if user else '2021-02-14 16:04:04.465506'
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if last_used is not None and (datetime.now() - datetime.fromisoformat(last_used)).total_seconds() < 43200:
            await message.reply('‚è≥ –¢—ã –Ω–µ–¥–∞–≤–Ω–æ *—Ö–æ–¥–∏–ª –∑–∞ –∫–ª–∞–¥–æ–º, –ø–æ–¥–æ–∂–¥–∏ 12 —á–∞—Å–æ–≤.*', parse_mode='markdown')
            return
        else:
            if random.randint(1,100) > 50:
                count = random.randint(1, 10)
                if user:
                    cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count + count, user_id))
                else:
                    cursor.execute('INSERT INTO users (id, drug_count, is_admin, is_banned, clan_member, clan_invite) VALUES (?, ?, ?, ?, ?, ?)', (user_id, count, 0, 0, 0, 0))
                cursor.execute('UPDATE users SET last_use_time = ? WHERE id = ?', ('2006-02-20 12:45:37.666666', user_id,))
                cursor.execute('UPDATE users SET last_find = ? WHERE id = ?', (datetime.now().isoformat(), user_id,))
                conn.commit()
                await bot.send_message(os.environ.get('LOGS_CHAT_ID'),f"<b>#FIND #WIN</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\ncount: <code>{count}</code>\ndrug_count: <code>{drug_count + count}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>",parse_mode='HTML')
                await message.reply(f"üëç {message.from_user.first_name}, —Ç—ã –ø–æ—à—ë–ª –≤ –ª–µ—Å –∏ *–Ω–∞—à–µ–ª –∫–ª–∞–¥*, —Ç–∞–º –ª–µ–∂–∞–ª–æ `{count} –≥—Ä.` –º–µ—Ñ—á–∏–∫–∞!\nüåø –¢–≤–æ–µ –≤—Ä–µ–º—è –∫–æ–º–∞–Ω–¥—ã /drug –æ–±–Ω–æ–≤–ª–µ–Ω–æ", parse_mode='markdown')
            elif random.randint(1,100) <= 50:
                count = random.randint(1, round(drug_count))
                cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (drug_count - count, user_id,))
                conn.commit()
                await bot.send_message(os.environ.get('LOGS_CHAT_ID'),f"<b>#FIND #LOSE</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\ncount: <code>{count}</code>\ndrug_count: <code>{drug_count - count}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>",parse_mode='HTML')
                await message.reply(f"‚ùå *{message.from_user.first_name}*, —Ç–µ–±—è *—Å–ø–∞–ª–∏–ª –º–µ–Ω—Ç* –∏ *–¥–∞–ª —Ç–µ–±–µ –ø–æ –µ–±–∞–ª—É*\nüåø –¢–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–∫—É–ø–∏—Ç—å—Å—è, –º–µ–Ω—Ç –ø—Ä–µ–¥–ª–æ–∂–∏–ª –≤–∑—è—Ç–∫—É –≤ —Ä–∞–∑–º–µ—Ä–µ `{count} –≥—Ä.`\n‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ *12 —á–∞—Å–æ–≤.*", parse_mode='markdown')
                
@router.message(Command('top'))
async def top_command(message: Message):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    is_banned = user[4] if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        cursor.execute('SELECT id, drug_count FROM users ORDER BY drug_count DESC LIMIT 10')
        top_users = cursor.fetchall()
        if top_users:
            response = "üîù–¢–û–ü 10 –õ–Æ–¢–´–• –ú–ï–§–ï–î–†–û–ù–©–ò–ö–û–í –í –ú–ò–†–ïüîù:\n"
            counter = 1
            for user in top_users:
                user_id = user[0]
                if user_id == 7266772626:
                    continue
                drug_count = user[1]
                user_info = await bot.get_chat(user_id)
                response += f"{counter}) *{user_info.full_name}*: `{drug_count} –≥—Ä. –º–µ—Ñ–∞`\n"
                counter += 1
            await message.reply(response, parse_mode='markdown')
        else:
            await message.reply('–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–ª –º–µ—Ñ.')

@router.message(Command('take'))
async def take_command(message: Message, state: FSMContext):
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    if not user:
        await message.reply('‚ùå –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
        return    
    is_banned = user[4]    
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
        return    
    reply_msg = message.reply_to_message    
    if reply_msg:
        if reply_msg.from_user.id == 7266772626:
            await message.reply(f'‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –º–µ—Ñ —É –±–æ—Ç–∞')
            return
        if reply_msg.from_user.id != message.from_user.id:
            victim_id = reply_msg.from_user.id
            your_id = message.from_user.id
            cursor.execute('SELECT * FROM users WHERE id = ?', (victim_id,))
            victim = cursor.fetchone()            
            cursor.execute('SELECT * FROM users WHERE id = ?', (your_id,))
            your_user = cursor.fetchone()            
            if not victim or not your_user:
                await message.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
                return            
            victim_drug_count = victim[1]
            your_drug_count = your_user[1]
            if victim_drug_count > 1 and your_drug_count > 1:
                last_time_data = await state.get_data()
                last_time = last_time_data.get('time') if last_time_data else None
                
                if last_time and (datetime.now() - last_time) < timedelta(days=1):
                    await message.reply("‚ùå –ù–µ–ª—å–∑—è –ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ —Ç–∞–∫ —á–∞—Å—Ç–æ! –¢—ã —Å–º–æ–∂–µ—à—å —Å–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ —á–µ—Ä–µ–∑ 1 –¥–µ–Ω—å.")
                    return
                variables = ['noticed', 'hit', 'pass']
                randomed = random.choice(variables)                
                if randomed == 'noticed':
                    cursor.execute('UPDATE users SET drug_count = drug_count - 1 WHERE id = ?', (your_id,))
                    conn.commit()
                    await message.reply('‚ùå *–ñ–µ—Ä—Ç–≤–∞ —Ç–µ–±—è –∑–∞–º–µ—Ç–∏–ª–∞*, –∏ —Ç—ã —Ä–µ—à–∏–ª —É–±–µ–∂–∞—Ç—å. –°–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å. –ü–æ–∫–∞ —Ç—ã –±–µ–∂–∞–ª, *—Ç—ã –ø–æ—Ç–µ—Ä—è–ª* `1 –≥—Ä.`', parse_mode='markdown')                    
                elif randomed == 'hit':
                    cursor.execute('UPDATE users SET drug_count = drug_count - 1 WHERE id = ?', (your_id,))
                    conn.commit()
                    await message.reply('‚ùå *–ñ–µ—Ä—Ç–≤–∞ —Ç–µ–±—è –∑–∞–º–µ—Ç–∏–ª–∞*, –∏ –ø–∏–∑–¥–∞–Ω—É–ª–∞ —Ç–µ–±—è –±—É—Ç—ã–ª–∫–æ–π –ø–æ –±–∞—à–∫–µ –±–ª—è. –°–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å. *–ñ–µ—Ä—Ç–≤–∞ –¥–æ—Å—Ç–∞–ª–∞ –∏–∑ —Ç–≤–æ–µ–≥–æ –∫–∞—Ä–º–∞–Ω–∞* `1 –≥—Ä.`', parse_mode='markdown')  
                elif randomed == 'pass':
                    cursor.execute('UPDATE users SET drug_count = drug_count - 1 WHERE id = ?', (victim_id,))
                    cursor.execute('UPDATE users SET drug_count = drug_count + 1 WHERE id = ?', (your_id,))
                    conn.commit()
                    if reply_msg.from_user.username:
                        username = reply_msg.from_user.username
                    else:
                        username = f'[{reply_msg.from_user.first_name}](tg://user?id={reply_msg.from_user.id})'     
                    await message.reply(f"‚úÖ [{message.from_user.first_name}](tg://user?id={message.from_user.id}) _—Å–ø–∏–∑–¥–∏–ª(-–∞) –æ–¥–∏–Ω –≥—Ä–∞–º –º–µ—Ñ–∞ —É_ @{username}!", parse_mode='markdown')
                await state.set_data({'time': datetime.now()})
            else:
                await message.reply('‚ùå –£ –≤–∞—Å –∏–ª–∏ —É –∂–µ—Ä—Ç–≤—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Ñ–∞.')
        else:
            await message.reply('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.')
    else:
        await message.reply('‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –º–µ—Ñ.')
            
@router.message(Command('drug'))
async def drug_command(message: Message, state: FSMContext):
    format = '%Y-%m-%d %H:%M:%S.%f'
    user_id = message.from_user.id
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    drug_count = user[1] if user else 0
    last_use_time = user[2] if user else 0
    is_admin = user[3] if user else 0
    is_banned = user[4] if user else 0
    use_time = datetime.strptime(last_use_time, format) if user else 0
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
    elif is_banned == 0:
        if last_use_time and (datetime.now() - use_time) < timedelta(hours=1):
            remaining_time = timedelta(hours=1) - (datetime.now() - use_time)
            await message.reply(f"‚ùå *{message.from_user.first_name}*, _—Ç—ã —É–∂–µ –Ω—é—Ö–∞–ª(-–∞)!_\n\nüåø –í—Å–µ–≥–æ —Å–Ω—é—Ö–∞–Ω–æ `{drug_count} –≥—Ä–∞–º–º` –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n\n‚è≥ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–Ω—é—Ö –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ `1 —á–∞—Å.`", parse_mode='markdown')
        elif random.randint(0,100) < 20:
            if last_use_time and (datetime.now() - use_time) < timedelta(hours=1):
                remaining_time = timedelta(hours=1) - (datetime.now() - use_time)
                await message.reply(f"üßÇ *{message.from_user.first_name}*, _—Ç—ã –ø—Ä–æ—Å—ã–ø–∞–ª(-–∞) –≤–µ—Å—å –º–µ—Ñ—á–∏–∫!_\n\nüåø –í—Å–µ–≥–æ —Å–Ω—é—Ö–∞–Ω–æ `{drug_count}` –≥—Ä–∞–º–º –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n\n‚è≥ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–Ω—é—Ö –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ `1 —á–∞—Å.`", parse_mode='markdown')
                cursor.execute('UPDATE users SET last_use_time = ? WHERE id = ?', (datetime.now(), user_id))
                conn.commit()
        else:
            count = random.randint(1, 10)
            if user:
                cursor.execute('UPDATE users SET drug_count = drug_count + ? WHERE id = ?', (count, user_id))
            else:
                cursor.execute('INSERT INTO users (id, drug_count, is_admin, is_banned) VALUES (?, ?, 0, 0)', (user_id, count))
            cursor.execute('UPDATE users SET last_use_time = ? WHERE id = ?', (datetime.now(), user_id))
            conn.commit()
            await message.reply(f"üëç *{message.from_user.first_name}*, _—Ç—ã –∑–∞–Ω—é—Ö–Ω—É–ª(-–∞) {count} –≥—Ä–∞–º–º –º–µ—Ñ—á–∏–∫–∞!_\n\nüåø –í—Å–µ–≥–æ —Å–Ω—é—Ö–∞–Ω–æ `{drug_count+count}` –≥—Ä–∞–º–º –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n\n‚è≥ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–Ω—é—Ö –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ `1 —á–∞—Å.`", parse_mode='markdown')

@router.message(Command('help'))
async def help_command(message: Message):
    await message.reply('''–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:

`/drug` - *–ø—Ä–∏–Ω—è—Ç—å –º–µ—Ñ–∏–∫*
`/top` - *—Ç–æ–ø —Ç–æ—Ä—á–µ–π –º–∏—Ä–∞*
`/take` - *—Å–ø–∏–∑–¥–∏—Ç—å –º–µ—Ñ–∏–∫ —É –±–ª–∏–∂–Ω–µ–≥–æ*
`/give` - *–ø–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Ñ–∏–∫–æ–º*
`/casino` - *–∫–∞–∑–∏–Ω–æ*
`/find` - *—Å—Ö–æ–¥–∏—Ç—å –∑–∞ –∫–ª–∞–¥–æ–º*
`/about` - *—É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ*
`/clancreate` - *—Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω*
`/deposit` - *–ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞*
`/withdraw` - *–≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –∫–ª–∞–Ω–∞*
`/clantop` - *—Ç–æ–ø 10 –∫–ª–∞–Ω–æ–≤ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞*
`/clanbalance` - *–±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞*
`/claninfo` - *–æ –∫–ª–∞–Ω–µ*
`/claninvite` - *–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –∫–ª–∞–Ω*
`/clankick` - *–∫–∏–∫–Ω—É—Ç—å –∏–∑ –∫–ª–∞–Ω–∞*
`/clanaccept` - *–ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω*
`/clandecline` - *–æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞–Ω*
`/clanleave` - *–¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ –≤—ã–π—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞*
`/clandisband` - *—Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω*
    ''', parse_mode='markdown')

@router.message(Command('grach'))
async def start_command(message: Message):
    await message.reply("–≥—Ä–∞—á —Ö—É–µ—Å–æ—Å")

@router.message(Command('rules'))
async def start_command(message: Message):
    await message.reply('''–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è mephmetrbot:
*1) –ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç–∏–Ω–≥ - –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞ –∏ –æ–±–Ω—É–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ *
*2) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª—é–±—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –±–æ—Ç–∞ - –±–∞–Ω –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ*
*3) –ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ —á–µ—Ä–µ–∑ —Ç–æ–ø –∫–ª–∞–Ω–æ–≤ –∏ —Ç–æ–ø —é–∑–µ—Ä–æ–≤ - –≤—ã–≥–æ–≤–æ—Ä, –ø–æ—Å–ª–µ –±–∞–Ω —Å –æ–±–Ω—É–ª–µ–Ω–∏–µ–º*
*4) –ó–∞–ø—Ä–µ—â–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∞ –≤–∞–ª—é—Ç—ã –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–∞–º–∏ - –æ–±–Ω—É–ª–µ–Ω–∏–µ –∏ –±–∞–Ω*

*–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏. –í—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã. 
–°–æ–∑–¥–∞—Ç–µ–ª–∏ –Ω–µ –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Ä—É—é—Ç –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏ –∏ –ø—Ä–æ—Ç–∏–≤ –∏—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è. 
–£–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥–∞–∂–∞ —è–≤–ª—è–µ—Ç—Å—è —É–≥–æ–ª–æ–≤–Ω–æ –Ω–∞–∫–∞–∑—É–µ–º–æ–π*
*–°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–∞—Ö –≤—ã –º–æ–∂–µ—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º* (*–∫–æ–º–∞–Ω–¥–∞* `/about`)''', parse_mode='markdown')
    
@router.message(Command('start'))
async def start_command(message: Message):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text='üì¢ –ö–∞–Ω–∞–ª', url='https://t.me/mefmetrch'),
        InlineKeyboardButton(text='üí∞ –î–æ–Ω–∞—Ç', url='https://t.me/mefmetrch'),
        InlineKeyboardButton(text='üí¨ –ß–∞—Ç', url='https://t.me/mefmetrchat')
    )
    await message.reply("üëã *–ó–¥–∞—Ä–æ–≤–∞ —à–Ω—ã—Ä*, —ç—Ç–æ—Ç –±–æ—Ç —Å–¥–µ–ª–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã *—Å—á–∏—Ç–∞—Ç—å* —Å–∫–æ–ª—å–∫–æ *–≥—Ä–∞–º–º –º–µ—Ñ–µ–¥—Ä–æ–Ω—á–∏–∫–∞* —Ç—ã —Å–Ω—é—Ö–∞–ª\nüßë‚Äçüíª –ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω *powerplantsmoke.t.me* –∏ *hateandroid.t.me*", reply_markup=builder.as_markup(), parse_mode='markdown')


@router.message(Command('about'))
async def about_command(message: Message):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text='üì¢ –ö–∞–Ω–∞–ª', url='https://t.me/mefmetrch'),
        InlineKeyboardButton(text='üí∞ –î–æ–Ω–∞—Ç', url='https://t.me/mefmetrch'),
        InlineKeyboardButton(text='üí¨ –ß–∞—Ç', url='https://t.me/mefmetrchat')
    )
    await message.reply("üßë‚Äçüíª –ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω powerplantsmoke.t.me –∏ hateandroid.t.me", reply_markup=builder.as_markup())

