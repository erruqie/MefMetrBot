from aiogram import Router
from aiogram.types import Message
from aiogram.filters.command import Command, CommandObject
import sqlite3
from datetime import datetime
import asyncio
from config import bot
import os

router = Router()
conn = sqlite3.connect('handlers/mephmetrbot.db')
cursor = conn.cursor()

@router.message(Command('casino'))
async def casino(message: Message, command: CommandObject):
    args = command.args
    user_id = message.from_user.id
    if not args:
        await message.reply("üõë –£–∫–∞–∂–∏ —Å—Ç–∞–≤–∫—É –∏ —É—Å–ª–æ–≤–∏–µ! –ü—Ä–∏–º–µ—Ä:\n`/casino 100 —á–µ—Ç`", parse_mode='markdown')
        return
    parts = args.split()
    try:
        bet = int(parts[0])
    except ValueError:
        await message.reply("üõë –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!", parse_mode='markdown')
        return
    if bet < 10:
        await message.reply("üõë –°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ `10` –≥—Ä.", parse_mode='markdown')
        return
    
    condition = parts[1]
    valid_conditions = ['—á–µ—Ç', '–Ω–µ—á–µ—Ç', '–º–µ–Ω—å—à–µ', '–±–æ–ª—å—à–µ'] + [str(i) for i in range(1, 7)]
    if condition not in valid_conditions:
        await message.reply("üõë –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ! *–£—Å–ª–æ–≤–∏—è: `—á–µ—Ç`, `–Ω–µ—á–µ—Ç`, `–º–µ–Ω—å—à–µ`, `–±–æ–ª—å—à–µ`, –∏–ª–∏ —á–∏—Å–ª–æ –æ—Ç `1` –¥–æ `6`.*", parse_mode='markdown')
        return
    
    cursor.execute('SELECT * FROM users WHERE id = ?', (user_id,))
    user = cursor.fetchone()
    if user is None:
        await message.reply('üõë –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', parse_mode='markdown')
        return
    drug_count = user[1]
    last_used = user[5]
    is_banned = user[4]
    if is_banned == 1:
        await message.reply('üõë –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
        return
    if bet > drug_count:
        await message.reply("üõë –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±–æ–ª—å—à–µ —Ç–≤–æ–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞!", parse_mode='markdown')
        return
    if last_used is not None and (datetime.now() - datetime.fromisoformat(last_used)).total_seconds() < 30:
        await message.reply('‚è≥ –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ *–∫—Ä—É—Ç–∏–ª –∫–∞–∑–∏–∫*, —Å–æ–ª–µ–≤–∞—è –æ–±–µ–∑—å—è–Ω–∞, *–ø–æ–¥–æ–∂–¥–∏ 30 —Å–µ–∫—É–Ω–¥ –ø–æ –±—Ä–∞—Ç—Å–∫–∏.*', parse_mode='markdown')
        return
    
    dice_message = await message.answer_dice(emoji='üé≤')
    await asyncio.sleep(3)
    dice_result = dice_message.dice.value
    outcome_message = f"üé≤ –í—ã–ø–∞–ª–æ: `{dice_result}`. "

    if condition == '—á–µ—Ç':
        if dice_result % 2 == 0:
            win_amount = round(bet * 1.5, 1)
            new_balance = round(drug_count + win_amount, 1)
            outcome_message += f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ `{win_amount}` –≥—Ä. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#WIN</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
        else:
            win_amount = 0
            new_balance = round(drug_count - bet, 1)
            outcome_message += f'‚ùå –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –Ω–µ —Å—ã–≥—Ä–∞–ª–∞. –ü–æ–≤–µ–∑—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!. –¢–≤–æ–π –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#LOSE</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
    elif condition == '–Ω–µ—á–µ—Ç':
        if dice_result % 2 != 0:
            win_amount = round(bet * 1.5, 1)
            new_balance = round(drug_count + win_amount, 1)
            outcome_message += f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ `{win_amount}` –≥—Ä. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#WIN</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
        else:
            win_amount = 0
            new_balance = round(drug_count - bet, 1)
            outcome_message += f'‚ùå –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –Ω–µ —Å—ã–≥—Ä–∞–ª–∞. –ü–æ–≤–µ–∑—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!. –¢–≤–æ–π –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#LOSE</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
    elif condition == '–º–µ–Ω—å—à–µ':
        if dice_result <= 3:
            win_amount = round(bet * 1.5, 1)
            new_balance = round(drug_count + win_amount, 1)
            outcome_message += f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ `{win_amount}` –≥—Ä. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#WIN</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
        else:
            win_amount = 0
            new_balance = round(drug_count - bet, 1)
            outcome_message += f'‚ùå –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –Ω–µ —Å—ã–≥—Ä–∞–ª–∞. –ü–æ–≤–µ–∑—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!. –¢–≤–æ–π –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#LOSE</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
    elif condition == '–±–æ–ª—å—à–µ':
        if dice_result > 3:
            win_amount = round(bet * 1.5, 1)
            new_balance = round(drug_count + win_amount, 1)
            outcome_message += f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ `{win_amount}` –≥—Ä. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#WIN</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
        else:
            win_amount = 0
            new_balance = round(drug_count - bet, 1)
            outcome_message += f'‚ùå –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –Ω–µ —Å—ã–≥—Ä–∞–ª–∞. –ü–æ–≤–µ–∑—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!. –¢–≤–æ–π –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'), f"<b>#CASINO</b> <b>#LOSE</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>1.5</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')

    elif condition.isdigit() and int(condition) in range(1, 7):
        number = int(condition)
        if dice_result == number:
            win_amount = round(bet * 3, 1)
            new_balance = round(drug_count + win_amount, 1)
            outcome_message += f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ `{win_amount}` –≥—Ä. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'),f"<b>#CASINO</b> <b>#WIN</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>3</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
        else:
            win_amount = 0
            new_balance = round(drug_count - bet, 1)
            outcome_message += f'‚ùå –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –Ω–µ —Å—ã–≥—Ä–∞–ª–∞. –ü–æ–≤–µ–∑—ë—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!. *–¢–≤–æ–π –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: `{new_balance}` –≥—Ä.*'
            cursor.execute('UPDATE users SET drug_count = ? WHERE id = ?', (new_balance, user_id))
            await bot.send_message(os.environ.get('LOGS_CHAT_ID'),f"<b>#CASINO</b> <b>#LOSE</b>\n\nfirst_name: <code>{message.from_user.first_name}</code>\nuser_id: <code>{user_id}</code>\nbet: <code>{bet}</code>\nmultiplier: <code>3</code>\ndrug_count: <code>{drug_count-bet}</code>\n\n<a href='tg://user?id={user_id}'>mention</a>", parse_mode='HTML')
    else:
        await message.reply("üõë –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ! *–£—Å–ª–æ–≤–∏—è: `—á–µ—Ç`, `–Ω–µ—á–µ—Ç`, `–º–µ–Ω—å—à–µ`, `–±–æ–ª—å—à–µ`, –∏–ª–∏ —á–∏—Å–ª–æ –æ—Ç `1` –¥–æ `6`.*", parse_mode='markdown')
        return
    cursor.execute('UPDATE users SET last_casino = ? WHERE id = ?', (datetime.now().isoformat(), user_id))
    conn.commit()
    await message.reply(outcome_message, parse_mode='markdown')